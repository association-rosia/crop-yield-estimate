# General
method: bayes

metric:
  name: reg/rmse
  goal: minimize

run_cap: 10000

parameters:
  random_state:
    distribution: constant
    value: 42

  cv:
    distribution: constant
    value: 5

  limit_h:
    distribution: constant
    value: 5000

  limit_l:
    distribution: constant
    value: 500

  use_llm_imputation:
    distribution: categorical
    values: [ True, False ]

  smote_augmentation:
    distribution: categorical
    values: [ True, False ]

  great_augmentation:
    distribution: categorical
    values: [ True, False ]

  generated_file:
    distribution: categorical
    values: [ 'TrainGenerated-6038.csv', 'TrainGeneratedImputed-6038.csv' ]

  max_target_by_acre:
    distribution: categorical
    values: [ 'none', 25000 ]

  # Preprocessing
  delna_thr:
    distribution: uniform
    min: 0
    max: 1

  fillna:
    distribution: categorical
    values: [ 'none', 'KNNImputer', 'IterativeImputer' ]

  # Model
  loss_function:
    distribution: constant
    value: 'RMSE'
  
  estimator_name:
    distribution: constant
    value: 'CatBoost'

  n_estimators:
    distribution: int_uniform
    min: 100
    max: 1000

  learning_rate:
    distribution: uniform
    min: 0
    max: 1

  reg_lambda:
    distribution: uniform
    min: 0.01
    max: 1

  bootstrap_type:
    distribution: categorical
    values: [ 'Bayesian', 'Bernoulli', 'MVS' ]

  max_depth:
    distribution: int_uniform
    min: 4
    max: 10

  grow_policy:
    distribution: categorical
    values: [ 'SymmetricTree', 'Depthwise', 'Lossguide' ]

  leaf_estimation_iterations:
    distribution: int_uniform
    min: 1
    max: 100

  leaf_estimation_backtracking:
    distribution: categorical
    values: [ 'No', 'AnyImprovement' ]

  colsample_bylevel:
    distribution: uniform
    min: 0
    max: 1

  nan_mode:
    distribution: constant
    value: 'Forbidden'

  langevin:
    distribution: categorical
    values: [ True, False ]

  diffusion_temperature:
    distribution: int_uniform
    min: 1
    max: 100000

  score_function:
    distribution: constant
    value: 'L2'

  penalties_coefficient:
    distribution: uniform
    min: 0.1
    max: 10

  model_shrink_rate:
    distribution: uniform
    min: 0.001
    max: 1

  model_shrink_mode:
    distribution: categorical
    values: [ 'Constant', 'Decreasing' ]

  verbose:
    distribution: constant
    value: 0